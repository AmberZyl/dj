<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zzd.mapper.ContentPropellingMapper" >
  <resultMap id="BaseResultMap" type="org.zzd.pojo.ContentPropelling" >
    <id column="content_id_" property="contentId" jdbcType="BIGINT" />
    <id column="user_id_" property="userId" jdbcType="BIGINT" />
    <result column="ing_" property="ing" jdbcType="INTEGER" />
    <result column="propelling_time_" property="propellingTime" jdbcType="TIMESTAMP" />
    <result column="accept_time_" property="acceptTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    content_id_, user_id_, ing_, propelling_time_, accept_time_
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.zzd.pojo.ContentPropellingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from content_propelling_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="org.zzd.pojo.ContentPropellingKey" >
    select 
    <include refid="Base_Column_List" />
    from content_propelling_
    where content_id_ = #{contentId,jdbcType=BIGINT}
      and user_id_ = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="org.zzd.pojo.ContentPropellingKey" >
    delete from content_propelling_
    where content_id_ = #{contentId,jdbcType=BIGINT}
      and user_id_ = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.zzd.pojo.ContentPropellingExample" >
    delete from content_propelling_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.zzd.pojo.ContentPropelling" >
    insert into content_propelling_ (content_id_, user_id_, ing_, 
      propelling_time_, accept_time_)
    values (#{contentId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{ing,jdbcType=INTEGER}, 
      #{propellingTime,jdbcType=TIMESTAMP}, #{acceptTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.zzd.pojo.ContentPropelling" >
    insert into content_propelling_
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contentId != null" >
        content_id_,
      </if>
      <if test="userId != null" >
        user_id_,
      </if>
      <if test="ing != null" >
        ing_,
      </if>
      <if test="propellingTime != null" >
        propelling_time_,
      </if>
      <if test="acceptTime != null" >
        accept_time_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contentId != null" >
        #{contentId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="ing != null" >
        #{ing,jdbcType=INTEGER},
      </if>
      <if test="propellingTime != null" >
        #{propellingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptTime != null" >
        #{acceptTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.zzd.pojo.ContentPropellingExample" resultType="java.lang.Integer" >
    select count(*) from content_propelling_
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update content_propelling_
    <set >
      <if test="record.contentId != null" >
        content_id_ = #{record.contentId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id_ = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.ing != null" >
        ing_ = #{record.ing,jdbcType=INTEGER},
      </if>
      <if test="record.propellingTime != null" >
        propelling_time_ = #{record.propellingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.acceptTime != null" >
        accept_time_ = #{record.acceptTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update content_propelling_
    set content_id_ = #{record.contentId,jdbcType=BIGINT},
      user_id_ = #{record.userId,jdbcType=BIGINT},
      ing_ = #{record.ing,jdbcType=INTEGER},
      propelling_time_ = #{record.propellingTime,jdbcType=TIMESTAMP},
      accept_time_ = #{record.acceptTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.zzd.pojo.ContentPropelling" >
    update content_propelling_
    <set >
      <if test="ing != null" >
        ing_ = #{ing,jdbcType=INTEGER},
      </if>
      <if test="propellingTime != null" >
        propelling_time_ = #{propellingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptTime != null" >
        accept_time_ = #{acceptTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where content_id_ = #{contentId,jdbcType=BIGINT}
      and user_id_ = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zzd.pojo.ContentPropelling" >
    update content_propelling_
    set ing_ = #{ing,jdbcType=INTEGER},
      propelling_time_ = #{propellingTime,jdbcType=TIMESTAMP},
      accept_time_ = #{acceptTime,jdbcType=TIMESTAMP}
    where content_id_ = #{contentId,jdbcType=BIGINT}
      and user_id_ = #{userId,jdbcType=BIGINT}
  </update>
</mapper>